# Generated by Django 5.2.5 on 2025-08-29 01:24

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GhanaCardRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ghana_card_number', models.CharField(max_length=20, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('nationality', models.CharField(default='Ghanaian', max_length=100)),
                ('contact_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GhostDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detection_flags', models.JSONField()),
                ('severity', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Admin Review'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('false_positive', 'False Positive'), ('disciplinary_action', 'Disciplinary Action Taken')], default='pending', max_length=20)),
                ('submission_attempt', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('admin_action_taken', models.TextField(blank=True)),
                ('evaluation_form_id', models.IntegerField(blank=True, help_text='ID of the evaluation form that triggered this detection', null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.CharField(default='40a032', max_length=6)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='OutgoingNSSPersonnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ghana_card_id', models.CharField(help_text='Ghana Card ID to prevent duplicates', max_length=20, unique=True)),
                ('nss_id', models.CharField(help_text='Original NSS ID', max_length=25)),
                ('full_name', models.CharField(help_text='Full name of personnel', max_length=255)),
                ('service_start_date', models.CharField(help_text='When service started', max_length=10)),
                ('service_end_date', models.CharField(help_text='When service ended', max_length=10)),
                ('region_served', models.CharField(help_text='Region where they served', max_length=100)),
                ('department', models.CharField(help_text='Department they worked in', max_length=50)),
                ('institution_assigned', models.CharField(help_text='Institution they were assigned to', max_length=255)),
                ('supervisor_name', models.CharField(blank=True, help_text='Supervisor during service', max_length=255, null=True)),
                ('performance_rating', models.CharField(blank=True, help_text='Final performance rating', max_length=30, null=True)),
                ('completion_year', models.IntegerField(help_text='Year when service was completed')),
                ('transfer_date', models.DateTimeField(auto_now_add=True, help_text='When transferred to outgoing database')),
                ('transfer_reason', models.CharField(default='evaluation_submitted', help_text='Reason for transfer', max_length=50)),
            ],
            options={
                'verbose_name': 'Outgoing NSS Personnel',
                'verbose_name_plural': 'Outgoing NSS Personnel',
                'ordering': ['-transfer_date'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Greater Accra', 'Greater Accra'), ('Western', 'Western'), ('Ashanti', 'Ashanti'), ('Eastern', 'Eastern'), ('Central', 'Central'), ('Volta', 'Volta'), ('Northern', 'Northern'), ('Western North', 'Western North'), ('Oti', 'Oti'), ('Ahafo', 'Ahafo'), ('Bono', 'Bono'), ('Bono East', 'Bono East'), ('Upper East', 'Upper East'), ('Upper West', 'Upper West'), ('North East', 'North East')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UniversityRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('student_id', models.CharField(default='DEFAULT_ID', max_length=20, unique=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('university_name', models.CharField(max_length=255)),
                ('course', models.CharField(max_length=255)),
                ('enrollment_year', models.CharField(max_length=255)),
                ('graduation_year', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Workplace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workplace_name', models.CharField(max_length=255)),
                ('location_address', models.TextField()),
                ('geolocation_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('geolocation_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('user_type', models.CharField(choices=[('nss', 'NSS Personnel'), ('supervisor', 'Supervisor'), ('admin', 'Administrator')], max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, related_name='myuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='myuser_permissions_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
